version: '3.8'
services:
  talib:
    build:
      context: ./talib
      dockerfile: Dockerfile
    volumes:
      - ./talib/.env.dev:/app/server/.env
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    environment:
      POSTGRES_DB: talib
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d talib"]
      interval: 10s
      timeout: 5s
      retries: 5

  alberto:
    build:
      context: ./alberto
      dockerfile: Dockerfile
    ports:
      - "3000:3000"

  tendermint:
    image: tendermint/tendermint:v0.34.24
    ports:
      - "26656:26656"
      - "26657:26657"
      - "26658:26658"
    volumes:
        - tm-data:/tendermint
    entrypoint: ["/bin/sh", "-c"]
    command: ["tendermint init --home=/tendermint && tendermint start --home=/tendermint --rpc.laddr tcp://0.0.0.0:26657 --proxy_app tcp://many-abci:26658"]

  many-abci:
    image: lifted/many-abci:nightly
    ports:
      - "8000:8000"
    volumes:
        - abci-data:/persistent
        - abci-data:/genfiles
        - ./config/abci.pem:/genfiles/abci.pem
    entrypoint: ["/bin/bash", "-c"]
    command: ["/app/src/many-abci/many-abci-image_binary --many 0.0.0.0:8000 --many-app http://many-ledger:8000 --many-pem /genfiles/abci.pem  --abci 0.0.0.0:26658 --cache-db /persistent/abci_request_cache.db --tendermint http://tendermint:26657"]

  many-ledger:
    image: lifted/many-ledger:nightly
    volumes:
        - ledger-data:/persistent
        - ledger-data:/genfiles
        - ./config/ledger_state.json5:/genfiles/ledger_state.json5
        - ./config/ledger_migrations.json:/genfiles/ledger_migrations.json
        - ./config/ledger.pem:/genfiles/ledger.pem
    entrypoint: ["/bin/bash", "-c"]
    command: ["/app/src/many-ledger/many-ledger-image_binary --abci --state=/genfiles/ledger_state.json5 --pem=/genfiles/ledger.pem --persistent=/persistent/ledger.db --addr 0.0.0.0:8000 --migrations-config=/genfiles/ledger_migrations.json"]

  manifest-ledger:
    image: ghcr.io/liftedinit/manifest-ledger:v0.0.1-alpha
    volumes:
        - manifest-ledger-data:/persistent
    entrypoint: ["/bin/bash", "-c"]
    # I didn't use `local-ic` because I want to manage every service from the compose file.
    # I don't like the result, but hey, it works.
    command: ["update_test_genesis() { cat $HOME_DIR/config/genesis.json | jq $1 > $HOME_DIR/config/tmp_genesis.json && mv $HOME_DIR/config/tmp_genesis.json $HOME_DIR/config/genesis.json; };
               echo $MNEMO1 | $BINARY keys add $KEY --home=$HOME_DIR --keyring-backend $KEYRING --algo $KEYALGO --recover &&
               echo $MNEMO2 | $BINARY keys add $KEY2 --home=$HOME_DIR --keyring-backend $KEYRING --algo $KEYALGO --recover &&
               $BINARY init $MONIKER --home=$HOME_DIR --chain-id $CHAIN_ID &&
               update_test_genesis '.consensus[\"params\"][\"block\"][\"max_gas\"]=\"1000000000\"' &&
               update_test_genesis '.app_state[\"gov\"][\"params\"][\"min_deposit\"]=[{\"denom\":\"$DENOM\",\"amount\":\"1000000\"}]' &&
               update_test_genesis '.app_state[\"gov\"][\"params\"][\"voting_period\"]=\"15s\"' &&
               update_test_genesis '.app_state[\"gov\"][\"params\"][\"expedited_voting_period\"]=\"10s\"' &&
               update_test_genesis '.app_state[\"staking\"][\"params\"][\"bond_denom\"]=\"${BOND_DENOM}\"' &&
               update_test_genesis '.app_state[\"staking\"][\"params\"][\"min_commission_rate\"]=\"0.000000000000000000\"' &&
               update_test_genesis '.app_state[\"mint\"][\"params\"][\"mint_denom\"]=\"$DENOM\"' &&
               update_test_genesis '.app_state[\"mint\"][\"params\"][\"blocks_per_year\"]=\"6311520\"' &&
               update_test_genesis '.app_state[\"tokenfactory\"][\"params\"][\"denom_creation_fee\"]=[]' &&
               update_test_genesis '.app_state[\"tokenfactory\"][\"params\"][\"denom_creation_gas_consume\"]=2000000' &&
               update_test_genesis '.app_state[\"manifest\"][\"params\"][\"inflation\"][\"mint_denom\"]=\"$DENOM\"' &&
               update_test_genesis '.app_state[\"manifest\"][\"params\"][\"inflation\"][\"yearly_amount\"]=\"500000000000\"' &&
               update_test_genesis '.app_state[\"manifest\"][\"params\"][\"inflation\"][\"automatic_enabled\"]=true' &&
               update_test_genesis '.app_state[\"manifest\"][\"params\"][\"stake_holders\"]=[{\"address\":\"manifest1hj5fveer5cjtn4wd6wstzugjfdxzl0xp8ws9ct\",\"percentage\":100000000}]' &&
               $BINARY genesis add-genesis-account $KEY 1000000${BOND_DENOM},10000000${DENOM},1000${TEST_DENOM} --keyring-backend $KEYRING --home=$HOME_DIR &&
               $BINARY genesis add-genesis-account $KEY2 100000${DENOM},1000${TEST_DENOM} --keyring-backend $KEYRING --home=$HOME_DIR &&
               $BINARY genesis gentx $KEY 1000000${BOND_DENOM} --keyring-backend $KEYRING --home=$HOME_DIR --chain-id $CHAIN_ID --commission-rate=0.0 --commission-max-rate=1.0 --commission-max-change-rate=0.1 &&
               $BINARY genesis collect-gentxs --home=$HOME_DIR &&
               $BINARY genesis validate-genesis --home=$HOME_DIR &&
               sed -i 's/laddr = \"tcp:\\/\\/127.0.0.1:26657\"/c\\laddr = \"tcp:\\/\\/0.0.0.0:'$RPC'\"/g' $HOME_DIR/config/config.toml &&
               sed -i 's/cors_allowed_origins = \\[\\]/cors_allowed_origins = \\[\"\\*\"\\]/g' $HOME_DIR/config/config.toml &&
               sed -i 's/address = \"tcp:\\/\\/localhost:1317\"/address = \"tcp:\\/\\/0.0.0.0:'$REST'\"/g' $HOME_DIR/config/app.toml &&
               sed -i 's/enable = false/enable = true/g' $HOME_DIR/config/app.toml &&
               sed -i 's/pprof_laddr = \"localhost:6060\"/pprof_laddr = \"localhost:'$PROFF'\"/g' $HOME_DIR/config/config.toml &&
               sed -i 's/laddr = \"tcp:\\/\\/0.0.0.0:26656\"/laddr = \"tcp:\\/\\/0.0.0.0:'$P2P'\"/g' $HOME_DIR/config/config.toml &&
               sed -i 's/address = \"localhost:9090\"/address = \"0.0.0.0:'$GRPC'\"/g' $HOME_DIR/config/app.toml &&
               sed -i 's/address = \"localhost:9091\"/address = \"0.0.0.0:'$GRPC_WEB'\"/g' $HOME_DIR/config/app.toml &&
               sed -i 's/address = \":8080\"/address = \"0.0.0.0:'$ROSETTA'\"/g' $HOME_DIR/config/app.toml &&
               sed -i 's/timeout_commit = \"5s\"/timeout_commit = \"'$TIMEOUT_COMMIT'\"/g' $HOME_DIR/config/config.toml &&
               POA_ADMIN_ADDRESS=$POA_ADMIN_ADDRESS $BINARY start --home=${HOME_DIR} --pruning=nothing  --minimum-gas-prices=0${DENOM} --rpc.laddr=\"tcp://0.0.0.0:$RPC\"
               "]


volumes:
  tm-data:
  abci-data:
  ledger-data:
  manifest-ledger-data: